// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using luafalcao.api.Persistence.Contexts;

namespace luafalcao.api.Web.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200829005241_InsertData2")]
    partial class InsertData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnName("normalized_name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_asp_net_roles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("asp_net_roles");

                    b.HasData(
                        new
                        {
                            Id = "ebdcb390-af78-4cae-90eb-d41e18ca15ff",
                            ConcurrencyStamp = "9feb4c92-062c-4ed4-ab7c-064796fa5232",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "4805e7f5-15eb-4cd1-be77-e30022931d22",
                            ConcurrencyStamp = "ec241c7a-244e-401f-971c-04e25f51da8e",
                            Name = "Todos",
                            NormalizedName = "TODOS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnName("role_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_role_claims");

                    b.HasIndex("RoleId");

                    b.ToTable("asp_net_role_claims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("claim_type")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnName("claim_value")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_user_claims");

                    b.HasIndex("UserId");

                    b.ToTable("asp_net_user_claims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnName("provider_key")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnName("provider_display_name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_asp_net_user_logins");

                    b.HasIndex("UserId");

                    b.ToTable("asp_net_user_logins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_asp_net_user_roles");

                    b.HasIndex("RoleId");

                    b.ToTable("asp_net_user_roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("login_provider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_asp_net_user_tokens");

                    b.ToTable("asp_net_user_tokens");
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Artigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AQualBlogPertence")
                        .HasColumnName("aqual_blog_pertence")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnName("data_publicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text");

                    b.Property<int>("NumeroLikes")
                        .HasColumnName("numero_likes")
                        .HasColumnType("integer");

                    b.Property<string[]>("Tags")
                        .HasColumnName("tags")
                        .HasColumnType("text[]");

                    b.Property<string>("Titulo")
                        .HasColumnName("titulo")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_artigo");

                    b.ToTable("artigo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 8, 29, 21, 52, 41, 309, DateTimeKind.Local).AddTicks(3673),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 1"
                        },
                        new
                        {
                            Id = 2,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 8, 30, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(7885),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 2"
                        },
                        new
                        {
                            Id = 3,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 8, 31, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8240),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 3"
                        },
                        new
                        {
                            Id = 4,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 1, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8250),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 4"
                        },
                        new
                        {
                            Id = 5,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 2, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8259),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 5"
                        },
                        new
                        {
                            Id = 6,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 3, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8263),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 6"
                        },
                        new
                        {
                            Id = 7,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 4, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8267),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 7"
                        },
                        new
                        {
                            Id = 8,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 5, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8275),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 8"
                        },
                        new
                        {
                            Id = 9,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 6, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8279),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 9"
                        },
                        new
                        {
                            Id = 10,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 7, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8283),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 10"
                        },
                        new
                        {
                            Id = 11,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 8, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8288),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 11"
                        },
                        new
                        {
                            Id = 12,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 9, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8292),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 12"
                        },
                        new
                        {
                            Id = 13,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 10, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8296),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 13"
                        },
                        new
                        {
                            Id = 14,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 11, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8300),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 14"
                        },
                        new
                        {
                            Id = 15,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 12, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8304),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 15"
                        },
                        new
                        {
                            Id = 16,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 13, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8308),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 16"
                        },
                        new
                        {
                            Id = 17,
                            AQualBlogPertence = "DiarioEngenheiroSoftware",
                            DataPublicacao = new DateTime(2020, 9, 14, 21, 52, 41, 311, DateTimeKind.Local).AddTicks(8312),
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vulputate non purus ac ultricies. In et lectus leo. Suspendisse ornare augue nisl, sed bibendum eros tempus eu. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Etiam semper, ante id fermentum egestas, magna libero ultrices justo, id mollis felis ante et elit..",
                            NumeroLikes = 5,
                            Tags = new[] { "Engenharia de Software", "Design Patterns", "Programação" },
                            Titulo = "Artigo 17"
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtigoId")
                        .HasColumnName("artigo_id")
                        .HasColumnType("integer");

                    b.Property<string>("Autor")
                        .HasColumnName("autor")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnName("data_publicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_comentario");

                    b.HasIndex("ArtigoId");

                    b.ToTable("comentario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtigoId = 1,
                            Autor = "Luã Falcão",
                            DataPublicacao = new DateTime(2020, 8, 28, 21, 52, 41, 314, DateTimeKind.Local).AddTicks(4504),
                            Descricao = "Comentário.......",
                            Email = "lpjfalcao@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            ArtigoId = 2,
                            Autor = "Luã Falcão",
                            DataPublicacao = new DateTime(2020, 8, 28, 21, 52, 41, 314, DateTimeKind.Local).AddTicks(7229),
                            Descricao = "Comentário.......",
                            Email = "lpjfalcao@gmail.com"
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("access_failed_count")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("concurrency_stamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("email_confirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("lockout_enabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("lockout_end")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("normalized_email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("normalized_user_name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("phone_number_confirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("security_stamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("two_factor_enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("pk_asp_net_users");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("asp_net_users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_asp_net_role_claims_asp_net_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_claims_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_logins_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_tokens_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Comentario", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Artigo", "Artigo")
                        .WithMany("Comentarios")
                        .HasForeignKey("ArtigoId")
                        .HasConstraintName("fk_comentario_artigo_artigo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
